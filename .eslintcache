[{"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\index.js":"1","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\App.js":"2","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\reportWebVitals.js":"3","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\components\\LoadingIndicator.js":"4","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\pages\\UserProfilePage.js":"5","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\pages\\HomePage.js":"6","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\containers\\UserImages.js":"7","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\components\\NavBarDisplay.js":"8","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\components\\AuthModal.js":"9","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\components\\LoginForm.js":"10","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\components\\SignUpForm.js":"11","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\pages\\MyProfilePage.js":"12","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\pages\\UploadPage.js":"13"},{"size":692,"mtime":1607440654876,"results":"14","hashOfConfig":"15"},{"size":1688,"mtime":1607660098016,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1294,"mtime":1607440367131,"results":"18","hashOfConfig":"15"},{"size":808,"mtime":1607588056388,"results":"19","hashOfConfig":"15"},{"size":1825,"mtime":1607588014976,"results":"20","hashOfConfig":"15"},{"size":1494,"mtime":1607665500208,"results":"21","hashOfConfig":"15"},{"size":2261,"mtime":1607678803223,"results":"22","hashOfConfig":"15"},{"size":673,"mtime":1607584957128,"results":"23","hashOfConfig":"15"},{"size":2355,"mtime":1607586992012,"results":"24","hashOfConfig":"15"},{"size":6340,"mtime":1607587812491,"results":"25","hashOfConfig":"15"},{"size":1100,"mtime":1607660970149,"results":"26","hashOfConfig":"15"},{"size":2667,"mtime":1608020359588,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1xlehmj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\index.js",[],["57","58"],"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\App.js",[],"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\reportWebVitals.js",[],"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\components\\LoadingIndicator.js",[],"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\pages\\UserProfilePage.js",[],"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\pages\\HomePage.js",[],"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\containers\\UserImages.js",[],"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\components\\NavBarDisplay.js",[],"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\components\\AuthModal.js",[],"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\components\\LoginForm.js",["59"],"import React, {useState} from \"react\"\r\nimport {ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, Label, Input} from \"reactstrap\"\r\nimport axios from 'axios'\r\nimport {toast} from 'react-toastify'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LoginForm = ({toggleIsLogin, toggle, setLoggedIn}) => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const history = useHistory()\r\n  \r\n  const handleLogin = (e) =>{\r\n    e.preventDefault()\r\n\r\n    axios({\r\n      method: 'post',\r\n      url: 'https://insta.nextacademy.com/api/v1/login',\r\n      data: {\r\n        username: username,\r\n        password: password\r\n      }\r\n    }).then (result => {\r\n      console.log(result)\r\n      localStorage.setItem('jwt', result.data.auth_token)\r\n      setLoggedIn(true)\r\n      setUsername(\"\")\r\n      setPassword(\"\")\r\n      toggle()\r\n      history.push(\"/profile\")\r\n\r\n      toast.success(\"Successfully Signed In! Yay!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        });\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(result.data.user))\r\n    })\r\n    .catch(err =>{\r\n      console.log(err)\r\n    })\r\n  }\r\n  return <>\r\n    <Form>\r\n      <ModalHeader toggle={toggle}>Log In</ModalHeader>\r\n      <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"username\">Username</Label>\r\n            <Input type=\"username\" name=\"username\" id=\"username\" placeholder=\"username\" value={username}  onChange={(e) => {setUsername(e.target.value)}}/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" value={password} onChange={(e) => {setPassword(e.target.value)}}/>\r\n          </FormGroup>\r\n          <p>New member? <a href=\"#\" onClick ={(e) =>{\r\n            e.preventDefault()\r\n            toggleIsLogin()\r\n          }}>Sign up here</a></p>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"primary\" onClick={handleLogin}>Log In</Button>{' '}\r\n        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n      </ModalFooter>\r\n    </Form>\r\n  </>\r\n  \r\n}\r\n\r\n\r\nexport default LoginForm","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\components\\SignUpForm.js",["60","61"],"import React, {useState, useEffect} from \"react\"\r\nimport {ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup,FormText,FormFeedback, Label, Input} from \"reactstrap\"\r\nimport axios from \"axios\"\r\nimport {toast} from \"react-toastify\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SignUpForm = ({toggleIsLogin, toggle, setLoggedIn}) => {\r\n  const history = useHistory()\r\n  const [delay, setDelay] = useState(null);\r\n  const [usernameValid, setUsernameValid] = useState(true);\r\n  const [passwordValid, setPasswordValid] = useState(true)\r\n  const [confirmPassword, setConfirmPassword] =useState(\"\")\r\n  const [username, setUsername] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  \r\n  const checkUsername = newUsername => {\r\n    // this should only trigger after you stop typing for 500ms\r\n    console.log(\"Making API call to check username!\");\r\n    axios\r\n      .get(\r\n        `https://insta.nextacademy.com/api/v1/users/check_name?username=${newUsername}`\r\n      )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        if (response.data.valid) {\r\n          setUsernameValid(true);\r\n        } else {\r\n          setUsernameValid(false);\r\n        }\r\n      });\r\n  };\r\n  const handleInput = e => {\r\n    if(e.target.name ===\"username\"){\r\n      // clears queue so that the old keystrokes don't trigger axios call\r\n      clearTimeout(delay);\r\n      const newUsername = e.target.value;\r\n      setUsername(newUsername);\r\n\r\n      // put each new keystroke into the queue\r\n      const newDelay = setTimeout(() => {\r\n        checkUsername(newUsername);\r\n      }, 500);\r\n\r\n      setDelay(newDelay);\r\n    }\r\n    if(e.target.name===\"email\"){\r\n      setEmail(e.target.value)\r\n    }\r\n    if(e.target.name ===\"password\"){\r\n      setPassword(e.target.value)\r\n    }\r\n    if(e.target.name === \"confirmPassword\"){\r\n      setConfirmPassword(e.target.value)\r\n    }\r\n    \r\n  };\r\n  const getInputProp = () => {\r\n    if (!username.length) {\r\n      return null;\r\n    }\r\n\r\n    if (username.length <= 6) {\r\n      return { invalid: true };\r\n    }\r\n\r\n    if (usernameValid) {\r\n      return { valid: true };\r\n    } else {\r\n      return { invalid: true };\r\n    }\r\n  };\r\n\r\n  const getFormFeedback = () => {\r\n    if (!username.length) {\r\n      return null;\r\n    }\r\n\r\n    if (username.length <= 6) {\r\n      return <FormFeedback invalid>Must be at least 6 characters</FormFeedback>;\r\n    }\r\n\r\n    if (usernameValid) {\r\n      return <FormFeedback valid>Sweet! That name is available</FormFeedback>;\r\n    } else {\r\n      return <FormFeedback invalid>Sorry! Username is taken</FormFeedback>;\r\n    }\r\n  };\r\n  const getPwInputProps =() =>{\r\n    if(confirmPassword.length === 0){\r\n      return null\r\n    }\r\n    if(password === confirmPassword){\r\n      return {valid:true}\r\n    }else {\r\n      return {invalid:true}\r\n    }\r\n  }\r\n  const checkPassword = () =>{\r\n    if(!confirmPassword.length){\r\n      return null\r\n    }\r\n    if(password === confirmPassword){\r\n      return <FormText valid>Passwords match!</FormText>\r\n    } else {\r\n      return <FormText invalid>Passwords do not match</FormText>\r\n    }\r\n  }\r\n  useEffect( () =>{\r\n    if(password === confirmPassword){\r\n      setPasswordValid(true)\r\n    } else {\r\n      setPasswordValid(false)\r\n    }\r\n  },[confirmPassword])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    axios({\r\n      method: 'POST',\r\n      url: 'https://insta.nextacademy.com/api/v1/users/',\r\n      data: {\r\n        username: username,\r\n        email: email,\r\n        password: password\r\n      }\r\n    })\r\n    .then(response => {\r\n      console.log(response)\r\n      toggle()\r\n  \r\n      toast(response.data.message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        });\r\n        setLoggedIn(true)\r\n        localStorage.setItem('jwt', response.data.auth_token)\r\n        history.push(\"/profile\")\r\n    })\r\n    .catch(error => {\r\n      console.error(error.response) // so that we know what went wrong if the request failed\r\n    })\r\n  }\r\n  const checkFormValid = () =>{\r\n    return !(username && email && passwordValid)\r\n  }\r\n  return <>\r\n    <Form>\r\n      <ModalHeader toggle={toggle}>Sign Up</ModalHeader>\r\n      <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"username\">Username</Label>\r\n            <Input \r\n              type=\"text\" \r\n              name=\"username\"\r\n              placeholder=\"Please enter your username\" \r\n              value={username} \r\n              onChange={handleInput}\r\n              {...getInputProp()}\r\n            />\r\n            {getFormFeedback()}\r\n            <FormText>Enter a username between 6 and 20 characters</FormText> \r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"email\">Email</Label>\r\n            <Input \r\n              type=\"email\" \r\n              name=\"email\" \r\n              placeholder=\"Please enter your email\"\r\n              value={email} \r\n              onChange={handleInput} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input \r\n              type=\"password\" \r\n              name=\"password\" \r\n              placeholder=\"Please enter your password\"\r\n              value={password} \r\n              onChange={handleInput} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Confirm Password</Label>\r\n            <Input \r\n              type=\"password\" \r\n              name=\"confirmPassword\" \r\n              placeholder=\"Please confirm your password\"\r\n              value={confirmPassword} \r\n              onChange={handleInput} \r\n              {...getPwInputProps()}/>\r\n              {checkPassword()}\r\n          </FormGroup>\r\n          <p>Already a member? <a href=\"#\" onClick ={(e) =>{\r\n            e.preventDefault()\r\n            toggleIsLogin()\r\n          }}>Log in here</a></p>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button \r\n          color=\"primary\" \r\n          disabled={checkFormValid()} \r\n          onClick={handleSubmit}>Sign Up</Button>{' '}\r\n        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n      </ModalFooter>\r\n    </Form>\r\n  </>\r\n}\r\n\r\nexport default SignUpForm","C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\pages\\MyProfilePage.js",[],"C:\\Next Academy Programming\\Day 15\\nextagram-project\\nextagram\\src\\pages\\UploadPage.js",["62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":59,"column":26,"nodeType":"69","endLine":62,"endColumn":14},{"ruleId":"70","severity":1,"message":"71","line":115,"column":5,"nodeType":"72","endLine":115,"endColumn":22,"suggestions":"73"},{"ruleId":"67","severity":1,"message":"68","line":198,"column":32,"nodeType":"69","endLine":201,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":74,"column":11,"nodeType":"69","endLine":78,"endColumn":13},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array.","ArrayExpression",["78"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [confirmPassword, password]",{"range":"81","text":"82"},[3302,3319],"[confirmPassword, password]"]